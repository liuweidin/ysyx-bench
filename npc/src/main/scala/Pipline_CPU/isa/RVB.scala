package Pipline_CPU.isa
import Pipline_CPU._
import Pipline_CPU.frontend._
import Pipline_CPU.backend._

import chisel3.util._
object RVB extends{
  def JAL = BitPat("b????????????_?????_???_?????_1101111")
  def JALR = BitPat("b????????????_?????_000_?????_1100111")
  def BEQ = BitPat("b???????_?????_?????_000_?????_1100011")
  def BNE = BitPat("b???????_?????_?????_001_?????_1100011")
  def BGE = BitPat("b???????_?????_?????_101_?????_1100011")
  def BLT = BitPat("b???????_?????_?????_100_?????_1100011")
  def BLTU = BitPat("b???????_?????_?????_110_?????_1100011")
  def BGEU = BitPat("b???????_?????_?????_111_?????_1100011")

  val table = Array(
    JAL -> List(InstrType.InstrJ,FUType.jump,ALUOPType.jal,RD.write),
    JALR -> List(InstrType.InstrI,FUType.jump,ALUOPType.jalr,RD.write),
    BEQ -> List(InstrType.InstrB, FUType.branch, ALUOPType.beq, RD.NOP),
    BNE -> List(InstrType.InstrB, FUType.branch, ALUOPType.bne, RD.NOP),
    BGE -> List(InstrType.InstrB,FUType.branch,ALUOPType.bge,RD.NOP),
    BLT ->List(InstrType.InstrB,FUType.branch,ALUOPType.blt,RD.NOP),
    BLTU -> List(InstrType.InstrB, FUType.branch, ALUOPType.bltu, RD.NOP),
    BGEU -> List(InstrType.InstrB, FUType.branch, ALUOPType.bgeu, RD.NOP),
    )
}
